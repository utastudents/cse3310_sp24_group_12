# Derived from an example provided by https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
#
#
#
#
name: Deploy
on: [push]
jobs:
  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Check out the source, compile, and test
        run: |
           java --version
           mvn --version
           git  --version
           git clone https://github.com/BudDavis/${{github.event.repository.name}}
           cd TicTacToe
           mvn  --no-transfer-progress package
           
      - name: Stop the server
        run: |
           #ssh staging "find /usr -print"
           ssh staging "systemctl --user status"
           # % git clone https://github.com/utastudents/cse3310_su23_group_3 
           # % ssh su23_group3@cse3310.org "systemctl --user stop webchat.service" 
           # scp -r cse3310_su23_group_3 su23_group3@cse3310.org:. 
           # % ssh su23_group3@cse3310.org "cd cse3310_su23_group_3;cd demo;mvn clean#;mvn
           # sysstemctl --user start webchat.service" 
           # %  ssh su23_group3@cse3310.org "systemctl --user status webchat.service" 
           
      - name: Start the server
        if: ${{ always() }}
        run: ssh staging ls
